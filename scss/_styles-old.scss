// 1) VARIABILI SASS
$main-color: purple;
$body-color: #131314;
$body-color-inverted: rgb(213, 213, 213);
$size-xs: 0.5rem;
$size: 1rem;
$size-md: 1.25rem;
$size-lg: 2.5rem;
$size-xl: 3rem;
$size-xxl: 5rem;

body {
  margin: 0;

  // tutte le propriet√† composte da propriet√†-*
  // possono essere ottimizzate definendole singolarmente per categoria
  padding: {
    top: $size-md;
    bottom: $size-md;
  }
}

// main section {
//   background-color: $main-color;
// }

// main section .container h1 {
//   font-size: $size-xxl;
//   padding: $size;
//   margin-top: 0;
// }

// main section .container ul {
//   color: $body-color-inverted;
// }

// main section .container button {
//   background-color: $body-color-inverted;
//   color: $main-color;
//   margin-inline-start: $size;
//   margin-block-end: $size;
// }

// 2) NESTING CSS SELECTORS
main {
  section {
    background-color: $main-color;
    .container {
      h1 {
        font-size: $size-xxl;
        padding: $size;
        margin-top: 0;
      }
      ul {
        color: $body-color-inverted;

        li {
          &::marker {
            content: "üöÄ";
          }

          &:nth-child(3) {
            border: 2px solid black;
          }
        }
      }
      button {
        background-color: $body-color-inverted;
        color: $main-color;
        margin-inline-start: $size;
        margin-block-end: $size;

        // 3) PARENT SELECTOR
        &:hover {
          background-color: $main-color;
          color: $body-color-inverted;
        }
      }
    }
  }
}

.container {
  width: 100%;
  margin-inline: auto;

  // le media queries possono essere inserite direttamente nel selettore,
  // cos√¨ da applicare dentro di lui le propriet√† derivanti dall'applicazione della media query
  @media screen and (min-width: 576px) {
    max-width: 540px;
  }
  @media screen and (min-width: 768px) {
    max-width: 740px;
  }
  @media screen and (min-width: 992px) {
    max-width: 960px;
  }
  @media screen and (min-width: 1200px) {
    max-width: 1160px;
  }
}

.main {
  &__button {
    // partendo da un colore principale troviamo le altre due varianti
    $button-color: paleturquoise;
    $success-btn-color: adjust-hue(paleturquoise, 90deg);
    $danger-btn-color: adjust-hue(paleturquoise, 180deg);

    padding: $size-xs $size;
    border: 1px solid transparent;
    font: {
      weight: 500;
      size: $size;
    }
    border-radius: 3px;

    &--primary {
      background-color: $button-color;
      border-color: adjust-color($color: paleturquoise, $lightness: -20%);
      box-shadow: 0 5px 10px adjust-color($color: paleturquoise, $lightness: -50%, $alpha: 0.3);
      color: adjust-color($color: paleturquoise, $lightness: -65%);
    }
    &--success {
      background-color: $success-btn-color;
      border-color: adjust-color($color: $success-btn-color, $lightness: -20%);
      box-shadow: 0 5px 10px adjust-color($color: $success-btn-color, $lightness: -50%, $alpha: 0.3);
      color: adjust-color($color: $success-btn-color, $lightness: -60%);
    }
    &--danger {
      background-color: $danger-btn-color;
      border-color: adjust-color($color: $danger-btn-color, $lightness: -20%);
      box-shadow: 0 5px 10px adjust-color($color: $danger-btn-color, $lightness: -50%, $alpha: 0.3);
      color: adjust-color($color: $danger-btn-color, $lightness: -60%);
    }
  }
}

.button-section {
  margin-block: $size-md;
  padding: $size;
}

// 4) EXTEND (@extend)
.button-section-alt {
  @extend .button-section;
  border: 2px solid $main-color;
}

// 5) PLACEHOLDER (%)
%reset-btn {
  background-color: transparent;
  border: 1px solid transparent;
}

%reset-font {
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
}

.button-section-alt {
  button {
    @extend %reset-btn, %reset-font;
  }
}

input,
textarea,
select {
  @extend %reset-font;
}

// 6) MIXINS (@mixin) - un blocco di regole CSS -DINAMICHE-, pu√≤ utilizzare dei parametri per i propri valori interni

@mixin box-shadow($x: 0, $y: 0, $blur: 0, $color: rgb(110, 110, 110), $spread: 0) {
  box-shadow: $x $y $blur $spread $color;
  padding-block: 1rem;
}

.button-section-alt {
  button {
    // @include box-shadow(0, 6px, 10px, rgba(220, 20, 60, 0.455));
    @include box-shadow($blur: 10px);
  }
}

@mixin box($border-size, $box-color, $radius: 20px) {
  width: 200px;
  height: 200px;
  margin-block: 2rem;
  display: inline-block;
  border-radius: $radius;
  border: $border-size solid adjust-color($box-color, $lightness: -20%);
  color: white;
  background-color: $box-color;
  box-shadow: 0 3px 20px adjust-color($box-color, $lightness: -50%);
}

.box-1 {
  @include box(2px, palevioletred);
}
.box-2 {
  @include box(1px, palegreen);
}
.box-3 {
  @include box(5px, paleturquoise);
}

@mixin dynamicBox($size, $property-type, $property-value) {
  width: $size;
  height: $size;
  margin-block: 2rem;
  display: inline-block;
  border: 2px solid black;
  color: white;
  // interpolare valori dinamici #{}
  background-#{$property-type}: $property-value;

  @if ($property-type == "image") {
    background-size: cover;
  } @else {
    border-radius: 10px;
  }
}

.box-4 {
  @include dynamicBox(300px, "color", darkblue);
}

.box-5 {
  @include dynamicBox(300px, "image", url(https://images.unsplash.com/photo-1757269267541-b68db349bf1e?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D));
}
